# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

pool:
  mo-cluster-agent-pool

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  azureSubscription: 'Mogenius subscription ARM-SP'
  clusterName: 'mogenius-prod-cluster'
  azureResourceGroup: 'mo-rg'

  dockerRegistryServiceConnection: '22486bb2-ad6b-424e-8276-4c5f0e867bd0'
  imageRepository: 'mo-doc-prod'
  containerRegistry: 'mogenius.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'mogenius8877710a-auth'
  keyVaulName: 'mo-key-vault'
  environment: 'mo-doc-prod.default'

  # Agent VM image name
  # vmImageName: 'ubuntu-latest'
  configuration: 'production'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    steps:
      - checkout: self
        persistCredentials: true
        clean: true

      - script: |
          if [ "${RN:0:10}" = "refs/tags/" ]; then
            echo "Tag detected: ${RN:10}"
          fi
        displayName: 'check for tag'

      - script: |
          touch .npmrc
          echo "registry=https://pkgs.dev.azure.com/mogenius/_packaging/mogenius/npm/registry/" >> .npmrc
          echo "always-auth=true" >> .npmrc
        displayName: 'create .npmrc for auth task'

      - task: npmAuthenticate@0
        inputs:
          workingFile: '.npmrc'
        displayName: 'npm authenticate'

      - task: Docker@2
        displayName: Build and push an image to container registry
        inputs:
          command: buildAndPush
          repository: $(imageRepository)
          dockerfile: $(dockerfilePath)
          containerRegistry: $(dockerRegistryServiceConnection)
          tags: |
            $(tag)
            latest

      - upload: manifests
        artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environment)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureKeyVault@1
            inputs:
              azureSubscription: $(azureSubscription)
              KeyVaultName: $(keyVaulName)
              SecretsFilter: '*'
              RunAsPreJob: true

          - task: replacetokens@3
            inputs:
              rootDirectory: $(Pipeline.Workspace)/manifests
              targetFiles: '**/*.yaml'
              encoding: 'auto'
              writeBOM: true
              actionOnMissing: 'warn'
              keepToken: false
              tokenPrefix: '__'
              tokenSuffix: '__'
              useLegacyPattern: false
              enableTelemetry: false

          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/prod/ingress.yaml
                $(Pipeline.Workspace)/manifests/prod/ingress-redirect.yaml
                $(Pipeline.Workspace)/manifests/prod/secret.yaml
                $(Pipeline.Workspace)/manifests/prod/deployment.yaml
                $(Pipeline.Workspace)/manifests/prod/service.yaml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

